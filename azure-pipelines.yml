trigger:
- main
resources:
- repo: self

variables:
  imagerepo: sampleapp
  tag: '$(Build.BuildId)'

stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        pool: testpool
        steps:
        - task: Docker@2
          inputs:
            containerRegistry: 'acr_rm_connection'
            repository: 'evertonacr'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/s/kubernetes'
            ArtifactName: 'manifests'
            publishLocation: 'Container'
            

  - stage: Deploy
    displayName: deploy image
    dependsOn: Build
    jobs:
      - job: deploy
        displayName: deploy to aks
        pool: testpool
        steps:
        - task: Docker@2
          inputs:
            containerRegistry: 'acr_rm_connection'
            repository: 'evertonacr'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'

        - task: DownloadBuildArtifacts@0
          inputs:
             buildType: 'current'
             downloadType: 'single'
             artifactName: 'manifests'
             downloadPath: '$(System.ArtifactsDirectory)/manifests'
            

        - task: KubernetesManifest@0
          inputs:
            action: 'createSecret'
            kubernetesServiceConnection: 'aks_rm_connection'
            namespace: 'default'
            secretType: 'dockerRegistry'
            secretName: 'dummysecret'
            dockerRegistryEndpoint: 'acr_rm_connection'

        - task: KubernetesManifest@0
          inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'aks_rm_connection'
                namespace: 'default'
                manifests: 'fillup'
            
      