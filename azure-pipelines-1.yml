# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - azure-pipelines-terraform
pool: testpool

stages:
- stage: validate
  jobs:
    - job: validate
      continueOnError: false
      steps:
      - task: TerraformInstaller@0
        inputs:
          terraformVersion: 'latest'

      - task: TerraformTaskV3@3
        inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'Azure subscription 1(1)(5d1821a0-334a-49d0-9d10-e3de78691195)'
            backendAzureRmResourceGroupName: 'TestRG'
            backendAzureRmStorageAccountName: 'evertondummystorage'
            backendAzureRmContainerName: 'dummycontainer'
            backendAzureRmKey: 'terraform.tfstate'
      - task: TerraformTaskV3@3
        inputs:
          provider: 'azurerm'
          command: 'validate'
    

- stage: deploy
  jobs:
    - deployment: deploy
      continueOnError: false
      environment: dev
      strategy: 
        runOnce:
          deploy:
            
            steps:
            - checkout: self
            - task: TerraformInstaller@0
              displayName: 'terraform install'
              inputs:
                terraformVersion: 'latest'
            - task: TerraformTaskV3@3
              displayName: 'terraform init'
              inputs:
                  provider: 'azurerm'
                  command: 'init'
                  backendServiceArm: 'Azure subscription 1(1)(5d1821a0-334a-49d0-9d10-e3de78691195)'
                  backendAzureRmResourceGroupName: 'TestRG'
                  backendAzureRmStorageAccountName: 'evertondummystorage'
                  backendAzureRmContainerName: 'dummycontainer'
                  backendAzureRmKey: 'terraform.tfstate'
            - task: TerraformTaskV3@3
              displayName: 'terraform plan'
              inputs:
                provider: 'azurerm'
                command: 'plan'
                environmentServiceNameAzureRM: 'Azure subscription 1(1)(5d1821a0-334a-49d0-9d10-e3de78691195)'
            - task: TerraformTaskV3@3
              displayName: 'terraform apply'
              inputs:
                provider: 'azurerm'
                command: 'apply'
                environmentServiceNameAzureRM: 'Azure subscription 1(1)(5d1821a0-334a-49d0-9d10-e3de78691195)'
              